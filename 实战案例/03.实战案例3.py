#千年虫问题
# year=[82,88,99,90,92,0,76,0,95]
# print(f'原列表是：  {year}')
# for index,value in enumerate (year): #enumerate函数是用于将列表中的索引和值一一对应
# 	if  value != 0 :
# 		year[index]=int('19'+str(value))
# 	else:
# 		year[index]=int('200'+str(value))

# print(f'现列表是{year}')
# year.sort()
# print(f'排序之后的列表为{year}')

#-----------------------------------------------------------------
#-----------------------------------------------------------------

#京东购物流程
# lis=[]
# for i in range(5):
# 	goods=input('请输入您要入库的商品，每次只能入库一件商品')
# 	lis.append(goods)

# for item in lis:
# 	print(item)    #至此实现入库功能

# cart=[]
# while True:
# 	num=input('请输入你要购买的商品的编号->')
# 	for item in lis:
# 		if item.find(num)!=-1:
# 			cart.append(item)
# 			break            #至此实现所选商品加入购物车功能
# 	if num=='q':
# 		break
# print('您购物车里已经加入的商品有：')
# for m in cart:
# 	print(m)                 #查看购物车

#-------------------------------------------------------------------
#-------------------------------------------------------------------
#根据星座预测性格
# constellation=['白羊座','金牛座','双子座','巨蟹座','狮子座','处女座','天枰座','天蝎座','射手座','摩羯座',
# '水瓶座','双鱼座']
# nature=['积极乐观','固执内向','圆滑世故','多愁善感','蜜汁自信','精明计较','犹豫不决','阴暗消极',
# '放荡不羁','务实本份','作天作地','安于现状']
# #将两个列表转成集合

# a=dict(zip(constellation,nature)) #zip函数可将两个列表中对应位置的两个元素组成一个元组
# #即想将两个元素个数相同的列表整合为一个字典，可通过这种方式
# # for i in a:   #这样遍历字典自能获取键，无法获取值，要根据键来获取值
# # 	print(i,a[i])

# # print(a)
# key=input('请输入您的星座->')
# print(f'{key}的性格为{a[key]}')

#-------------------------------------------------------------------
#-------------------------------------------------------------------
#模拟12306火车票订单下单
# dict_ticket={'G1569':['北京南-天津西','18:05','18:39','00:34'],
#           'G1567':['无锡东-北京南','18:15','18:49','00:34'],
#           'G8917':['北京南-上海南','18:20','21:50','00:59'],
#           'G114':['上海南-北京南','18:20','13:50','19:34']}


# print('车次\t\t出发站\t\t到达站\t\t出发时间\t\t历经时长')
# for key in dict_ticket:
# 	print(key,end='\t\t')
# 	for i in dict_ticket[key]:
# 		print(i,end='\t\t')
# 	print()

#-----------------------------------------------------------------
#-----------------------------------------------------------------
#显示2019中超联赛前五名排名
#方式一：字典的方式
# team=['广州恒大','北京国安','上海上港','江苏苏宁','山东鲁能']
# score=['72','70','66','53','51']
# a=dict(zip(team,score))
# i=1
# for key in a:
# 	print(i,'.',end='')
# 	print(key,a[key])
# 	i+=1

#------------------------------------------------------------------
#方式2：元组的方式
# score=(('广州恒大',72),('北京国安',70),('上海上岗',66),('江苏苏宁',53),('山东鲁能',51))

# for index,value in enumerate(score):
# 	print(index+1,'.',end='')
# 	for i in value:
# 		print(i,end='  ')
# 	print()

#-------------------------------------------------------------------
#-------------------------------------------------------------------

#统计指定字符串中字符出现的次数
# strr=input('请输入字符串->')
# cha=input('请输入需要统计的字符->')
# a=0
# for i in strr:
# 	if i.upper()==cha or i.lower()==cha :
# 		a+=1
# print(a)

#-------------------------------------------------------------------
#-------------------------------------------------------------------
#输出学生分数
# try:
# 	score=int(input('请输入学生分数->'))
# 	if 0<=score<=100:
# 		print(score)
# 	else:
# 		raise Exception('分数不正确') #抛出异常

# except Exception as e :
# 	print(e)
#-------------------------------------------------------------------
#-------------------------------------------------------------------
#判断三条边是否可以构成三角形         (手动抛出异常)
# def is_triangel(a,b,c):
# 	if a<0 or b<0 or c<0:
# 		raise Exception('三角形的三边必须为正数')

# 	if a+b>c and a+c>b and b+c>a:
# 		print(f'三角形的三边长分别为a={a},b={b},c={c}')

# 	else:
# 		raise Exception(f'a={a},b={b},c={c},不能构成三角形')


# if __name__=='__main__':
# 	try:
# 		a=int(input('请输入三角形的第一条边->'))
# 		b=int(input('请输入三角形的第二条边->'))
# 		c=int(input('请输入三角形的第三条边->'))
# 		is_triangel(a,b,c)

# 	except Exception as e :
# 		print(e)

#---------------------------------------------------------------------
#--------------------------------------------------------------------
#定义一个圆的类计算面积和周长
# import math
# class Circle:
# 	def __init__(self,R):
# 		self._R=R

# 	def area (self):
# 		return math.pi*math.pow(self._R,2)

# 	def cir (self):
# 		return 2*math.pi*self._R

# if __name__=='__main__' :
# 	R=float(input('请输入半径->'))
# 	a=Circle(R)
# 	print(f'圆的面积是{a.area()},圆的周长是{a.cir()}')
# 	print('圆的面积是{0:.3f}，圆的周长是{1:.3f}'.format(a.area(),a.cir()))

#--------------------------------------------------------------------
#--------------------------------------------------------------------

#定义学生类录入5个学生信息存储到列表中
# class Stu:
# 	def __init__(self,name,age,gender,score):
# 		self._name=name
# 		self._age=age
# 		self._gender=gender
# 		self._score=score

# 	def show(self):
# 		print(self._name,self._age,self._gender,self._score)

# if __name__=='__main__':
# 	print('请输入五位学员的信息（姓名#年龄#性别#分数）')
# 	lst=[]
# 	for i in range(5):
# 		s=input(f'请输入第{i+1}位学员的相关信息：')
# 		s_lst=s.split('#') #split()函数通过指定字符对字符串进行分割,其返回值为一个列表
# 		stu=Stu(s_lst[0],int(s_lst[1]),s_lst[2],int(s_lst[3]))
# 		lst.append(stu)

# 	for item in lst:
# 		item.show()

#split()函数，其用法为：string.split(str='',num=string.count(str))
#string是需要被分割的字符串
#str是以什么字符进行分割
#unm是进行分割的次数，从第一个分割符号开始向后分割num次

#---------------------------------------------------------------------
#---------------------------------------------------------------------
#


