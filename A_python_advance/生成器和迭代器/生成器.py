# generator
'''
通过列表生成式（列表推导式），我们可以直接创建一个列表。
但是，收到内存限制，列表容量肯定是有限的。
而且，创建一个包含100万个原始的列表，不仅占有很大的存储空间，
如果我们仅仅需要访问前面几个元素，那后面绝大多数元素占用的空间都白白浪费。
所以，如果列表元素可以按照某种算法推算出来，那我们是否可以在循环的过程中不断推算出后续的元素
这样就不必创建完整的list,从而节省大量的空间。
在Python中，这种一边循环一边计算的机制，称为生成器：generator
得到生成器的方式：
1、通过列表推导式得到生成器
'''
result = [3*i for i in range(10)]
print(result)

# 得到生成器
g = (3*i for i in range(10))
print(type(g))
print(g)

# 方式1 通过调用 __next__() 方式得到元素
print(g.__next__())

# 方式2 next()
# 每调用一次next则会产生一个元素
print(next(g))
