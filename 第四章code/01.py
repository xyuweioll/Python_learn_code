#第四章 序列
##列表(list)
#     -列表是Python中的一个对象
#     -对象(object)就是内存中专门用来存储数据的一块区域
#     -之前我们学习的对象，像数值，它只能保存单一的值
#     -列表中可以保存多个有序的数据
#     -列表的使用：
#          1.列表的创建
#          2.操作列表中的数据


#创建列表：通过[]创建列表
#my_list=[ ] #创建了一个空列表
# 列表中存储的数据，叫作元素
#一个列表中可以存储多个元素
#列表中可以保存任意的对象 
#列表中的对象都会按照插入的顺序存储到列表中
#可以通过索引(index)获取列表中的元素
#   索引是元素在列表中的位置，列表中的每一个元素都有一个索引
#   索引是从0开始的整数，列表的第一个位置索引为0，第二个位置索引为1
#    通过索引获取列表中的元素 如 my_list[0],就是获取my_list列表中的第一个元素
#获取列表的长度，列表中元素的个数，用函数 len()
#获取到的长度的值，是列表的最大索引+1

#练习：创建一个列表，在列表中保存你最后的5个朋友的名字
                #然后分别通过索引获取每一个朋友的名字
# my_list=['董征锜','张杰','杨小涛','刘岩','丁浩强']
# i=0
# while i<5:
# 	print(my_list[i])
# 	i+=1


#切片：指从现有列表中获取一个子列表
#创建一个列表：一般创建列表时其名字会使用复数
#列表索引可以是负数
#如果索引是负数，则从后向前获取元素，-1表示倒数第一个，以此类推
stus=['孙悟空','猪八戒','沙和尚','唐僧','蜘蛛精','白骨精',]
#通过切片获取指定元素
#语法：列表[起始:结束:步长]
#步长表示，每次获取元素的间隔，默认值是1
#步长不能是0，但可以是负数，如果是负数，则会从列表的后部向前边取
#通过切片获取元素时，会包括起始位置的元素，但不包括结束位置的元素
#做切片操作时，总会返回一个新的列表，不会影响原来的列表
#如果省略结束位置，则会一直截取到最后，省略开始位置则从第一个元素开始截取
#如果开始和结束的位置都省略，相当于创建了列表的副本
print(stus[0:3])


#序列(sequence)
#  -序列是python中最基本的一种数据结构
#  -数据结构指计算机中数据存储的方式
#  -序列用于保存一组有序的数据，所有的数据在序列当中都有一个唯一的位置（索引）
#  并且序列中的数据会按照添加的顺序来分配索引
#序列的分类：
#       可变序列:序列中的元素可以改变
#            list(列表)
#        不可变序列(序列中的元素不可改变)
#            字符串（str)
#            元组（tuple)
 